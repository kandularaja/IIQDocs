<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="TRNG-PopulateRegionCode" type="ResourceObjectCustomization">
  <Description>This rule is configured on the application and is called after the connector has build a ResourceObject from the native application data.

Initially designed for non-rule based connectors to add SPPrivileged flag to an object, but could be used to do any transformations.</Description>
  <Signature returnType="ResourceObject">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="object">
        <Description>
          The ResourceObject built by the connector.
        </Description>
      </Argument>
      <Argument name="application">
        <Description>
          Application that references the connector.
        </Description>
      </Argument>
      <Argument name="connector">
        <Description>
          The connector object.
        </Description>
      </Argument>
      <Argument name="state">
        <Description>
          A Map containing state information.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="resourceObject">
        <Description>
          The updated resource object.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>
  import sailpoint.object.Custom;
  import sailpoint.object.ResourceObject;

  // [1] Retrieve the custom object called "regionCodes"
  //-------------------------------------------------
    Custom regionCodesObj = context.__________________;
  //-------------------------------------------------

  // Get region from the resourceObject variable "object"
  String region = object.getString("region");

  // [2] Look up the corresponding code value (a string) 
  //     for the region, in the custom object
  //-------------------------------------------------
    String regionCode = regionCodesObj._________(________);
  //-------------------------------------------------

  // [3] Set code value into resourceObject as attribute "regionCode"
  //-------------------------------------------------
    object.______("regionCode",regionCode);
  //-------------------------------------------------

  // Return the resource object variable from the rule
  return object;

  </Source>
</Rule>
